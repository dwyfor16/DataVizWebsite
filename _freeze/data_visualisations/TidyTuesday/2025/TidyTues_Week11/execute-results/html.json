{
  "hash": "ddfc95685d553626b7f2cd9a9a234275",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TidyTuesday Week 11: PAlm Trees Analysis\"\nsubtitle: \"Plant traits are critical to plant form and function —including growth, survival and reproduction— and therefore shape fundamental aspects of population and ecosystem dynamics as well as ecosystem services. Here, we present a global species-level compilation of key functional traits for palms (Arecaceae), a plant family with keystone importance in tropical and subtropical ecosystems.\"\nauthor: \"Peter Gray\"\ndate: \"2025-03-19\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [tidytuesday, R, data visulation, ggplot2, patchwork, tidyverse, risk-analysis]\nimage: \"thumbnails/TidyTues_Week10.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: false\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n![Thumbnail](thumbnails/TidyTues_Week11.png)\n\n#### 1. R code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the packages in ----------------------------------------------------\n\nif(!require(tidyverse)){install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(patchwork)){install.packages(\"patchwork\"); library(patchwork)}\nif(!require(showtext)){install.packages(\"showtext\"); library(showtext)}\nif(!require(ggdendro)){install.packages(\"ggdendro\"); library(ggdendro)}\nif(!require(ggbrick)){install.packages(\"ggbrick\"); library(ggbrick)}\nif(!require(ggmosaic)){install.packages(\"ggmosaic\"); library(ggmosaic)}\nif(!require(treemapify)){install.packages(\"treemapify\"); library(treemapify)}\n\n# get the wd\nwd <- getwd()\n\n\npalmtrees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-03-18/palmtrees.csv')\n\nfont_add_google(\"Noto Sans Mono\", \"noto_mono\")\n\nfont <- \"noto_mono\"\n\nshowtext_auto()\n\n\n\n# Color palette\n\ncolor <- palette.colors(palette = \"Okabe-Ito\")\n\ncolor <- append(color, \"gold\")\n\ncolor[1] <- \"#D41159\"\n\n\n\n\n\nCustom_Style <- function() {\n  \n  ggplot2::theme(\n    \n    plot.title = ggplot2::element_text(family=font,\n                                       \n                                       size=24,\n                                       \n                                       face=\"bold\",\n                                       \n                                       color=\"#222222\"),\n    \n    plot.subtitle = ggplot2::element_text(family=font,\n                                          \n                                          size=18,\n                                          \n                                          color=\"#222222\"),\n    \n    plot.caption = ggplot2::element_text(family=font,\n                                         \n                                         size=10,\n                                         \n                                         color=\"#222222\"),\n    \n    \n    \n    legend.position = \"bottom\",\n    \n    legend.title = ggplot2::element_text(family=font,\n                                         \n                                         size=22,\n                                         \n                                         face=\"bold\",\n                                         \n                                         color=\"#222222\"),\n    \n    # legend.text.align = 0,\n    \n    legend.key = ggplot2::element_blank(),\n    \n    legend.text = ggplot2::element_text(family=font,\n                                        \n                                        size=9,\n                                        \n                                        color=\"#222222\"),\n    \n    \n    \n    # Axis format\n    \n    axis.text = ggplot2::element_text(family = font,\n                                      \n                                      size=10,\n                                      \n                                      color=\"#222222\"),\n    \n    axis.text.x = ggplot2::element_text(margin=ggplot2::margin(5, b = 10), size =8),\n    \n    axis.line = ggplot2::element_line(colour = alpha('#222222', 0.5), size =0.5),\n    \n    axis.title = ggplot2::element_text(family=font,\n                                       \n                                       size=12,\n                                       \n                                       face=\"bold\",\n                                       \n                                       color=\"#222222\"),\n    \n    \n    \n    \n    \n    # Grid lines\n    \n    panel.grid.minor = ggplot2::element_blank(),\n    \n    panel.grid.major.y = ggplot2::element_blank(),\n    \n    panel.grid.major.x = ggplot2::element_blank(),\n    \n    \n    \n    \n    \n    \n    \n    # Very pale cream/yellow background\n    \n    panel.background = element_rect(fill = \"#FFFBF0\", \n                                    \n                                    color = \"#FFFBF0\",\n                                    \n                                    linewidth = 0.5,\n                                    \n                                    linetype = \"solid\"),\n    \n    plot.background = element_rect(fill = \"#FFFBF0\", \n                                   \n                                   color = \"#FFFBF0\",\n                                   \n                                   linewidth = 0.5,\n                                   \n                                   linetype = \"solid\"),\n    \n    legend.background = element_rect(fill = \"#FFFBF0\", \n                                     \n                                     color = \"#FFFBF0\",\n                                     \n                                     linewidth = 0.5,\n                                     \n                                     linetype = \"solid\"),\n    \n    \n    \n    \n    \n  )\n  \n}\npalm_colours <- palmtrees %>%\n  filter(!is.na(main_fruit_colors)) %>% \n  mutate(main_fruit_colors = str_extract(main_fruit_colors, \"^[^;]+\"),\n         main_fruit_colors = str_to_title(main_fruit_colors)) %>% \n  count(palm_tribe, main_fruit_colors) \n\n\n\ncolor_mapping <- c(\n  \"Black\" = alpha(\"black\", 0.7), \"Blue\" = \"blue\", \"Brown\" = \"brown\", \"Green\" = \"green\", \n  \"Orange\" = \"orange\", \"Pink\" = \"pink\", \"Purple\" = \"purple\", \"Red\" = \"red\", \n  \"White\" = \"white\", \"Yellow\" = \"yellow\", \"Cream\" = \"antiquewhite\", \n  \"Grey\" = \"grey\", \"Ivory\" = \"ivory\", \"Straw-Coloured\" = \"wheat\"\n)\n\ncircular_bar <- palm_colours %>% \n  group_by(palm_tribe) %>%\n  mutate(\n    percent = (n / sum(n)) * 100,\n     # Capitalize colors here\n  ) %>%\n  ggplot(aes(x = palm_tribe, y = percent, fill = main_fruit_colors)) +\n  geom_bar(stat = \"identity\", width = 0.8) +\n  coord_polar() +\n  \n  scale_fill_manual(values = color_mapping) +\n  labs(fill = \"Primary Fruit Colour\") +\n  Custom_Style() +\n  theme(\n    axis.text.x = element_text(size = 22),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.line = element_blank(),\n    legend.text = element_text(size = 22)\n  ) +\n  guides(fill = guide_legend(ncol = 3))\n\np1 <- circular_bar +\n  theme(legend.position = \"bottom\") &\n  plot_annotation(\n    title = str_wrap(\"Percentage of Palm Tree Fruit Colors by Tribe\", 60),\n    subtitle = \"TidyTuesday: Week 11, 2025\",\n    theme = Custom_Style()\n  ) &\n  theme(\n    caption = element_text(hjust = 0.5),\n    plot.subtitle = element_text(size = 32),\n    plot.title = element_text(size = 48)\n  )\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}