{
  "hash": "78e7678de647df1dc515e1c6e3702426",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CDC Archive Data Analysis\"\nsubtitle: \"An Analysis of the CDC datasets archived/purged by the Trump administration\"\nauthor: \"Peter Gray\"\ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [tidytuesday, R, data visulation, ggplot2, patchwork, tidyverse, risk-analysis, kaplan-meier]\nimage: \"thumbnails/TidyTues_Week06.png\"\nformat:\n  html:\n    code-link: true\n    code-fold: true\n    code-tools: false\n    code-summary: \"Display code\"\n    self-contained: true\n    theme: solar\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n![Thumbnail](thumbnails/TidyTues_Week06a.png)\n![Thumbnail](thumbnails/TidyTues_Week06b.png)\n\n#### R code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(tidyverse)){install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(survival)){install.packages(\"survival\"); library(survival)}\nif(!require(survminer)){install.packages(\"survminer\"); library(survminer)}\nif(!require(ggfortify)){install.packages(\"ggfortify\"); library(ggfortify)}\nif(!require(patchwork)){install.packages(\"patchwork\"); library(patchwork)}\nif(!require(tidyverse)){install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(sysfonts)){install.packages(\"sysfonts\"); library(sysfonts)}\nif(!require(showtext)){install.packages(\"showtext\"); library(showtext)}\nif(!require(RColorBrewer)){install.packages(\"RColorBrewer\");library(RColorBrewer)}\n\nfont_add_google(\"Roboto Mono\", \"roboto_mono\")\nfont <- \"roboto_mono\"\nshowtext_auto()\n\n# Color palette\ncolor <- palette.colors(palette = \"Okabe-Ito\")\ncolor <- append(color, \"#40B0A6\")\ncolor[1] <- \"#D41159\"\n\n\nCustom_Style <- function() {\n  ggplot2::theme(\n    plot.title = ggplot2::element_text(family=font,\n                                       size=28,\n                                       face=\"bold\",\n                                       color=\"#222222\"),\n    plot.subtitle = ggplot2::element_text(family=font,\n                                          size=20,\n                                          color=\"#222222\"),\n    plot.caption = ggplot2::element_text(family=font,\n                                         size=12,\n                                         color=\"#222222\"),\n    \n    legend.position = \"bottom\",\n    legend.title = ggplot2::element_text(family=font, \n                                         size=12, \n                                         face=\"bold\", \n                                         color=\"#222222\"),\n    # legend.text.align = 0,\n    legend.key = ggplot2::element_blank(),\n    legend.text = ggplot2::element_text(family=font,\n                                        size=9,\n                                        color=\"#222222\"),\n    \n    # Axis format\n    axis.text = ggplot2::element_text(family = font,\n                                      size=10,\n                                      color=\"#222222\"),\n    axis.text.x = ggplot2::element_text(margin=ggplot2::margin(5, b = 10)),\n    axis.line = ggplot2::element_line(colour = alpha('#222222', 0.5), size =0.5),\n    axis.title = ggplot2::element_text(family=font, \n                                         size=12, \n                                         face=\"bold\", \n                                         color=\"#222222\"),\n    \n    \n    # Grid lines\n    panel.grid.minor = ggplot2::element_blank(),\n    panel.grid.major.y = ggplot2::element_blank(),\n    panel.grid.major.x = ggplot2::element_blank(),\n    \n    \n    \n    # Very pale cream/yellow background\n    panel.background = element_rect(fill = \"#FFFBF0\",  \n                                    color = \"#FFFBF0\", \n                                    linewidth = 0.5, \n                                    linetype = \"solid\"),\n    plot.background = element_rect(fill = \"#FFFBF0\",  \n                                   color = \"#FFFBF0\", \n                                   linewidth = 0.5, \n                                   linetype = \"solid\"),\n    legend.background = element_rect(fill = \"#FFFBF0\",  \n                                     color = \"#FFFBF0\", \n                                     linewidth = 0.5, \n                                     linetype = \"solid\"),\n    \n    \n  )\n}\n\n\n\n\ncdc_datasets <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-11/cdc_datasets.csv')\nfpi_codes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-11/fpi_codes.csv')\nomb_codes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-11/omb_codes.csv')\n\n\n\nAgency <- omb_codes %>% \n  group_by(agency_name) %>% \n  summarise(n = n()) %>% \n  arrange(desc(n)) %>% \n  slice(1: 10)\n\np1 <- Agency %>% \n  ggplot(aes(x = fct_reorder(agency_name, n, .desc = TRUE), y = n)) +   # Explicitly set y to n\n  geom_col(aes(fill = as.factor(agency_name))) +   # Use geom_col() instead of geom_bar()\n  labs(subtitle = str_wrap(\"CDC Database Archiving: Top 10 Agencies  that have archived databases since 2016\", 40), x = \"Agency Name\", y = \"Count (n)\", fill = \"Agency Name\") + \n  geom_text(aes(label = paste0(\"n = \", n)), \n            vjust = -0.5,   # Position above the bar\n            size = 4,       # Adjusted size for better readability\n            family = font) +\n  Custom_Style() +\n  scale_fill_manual(values = color) +\n  scale_x_discrete(labels = function(x) str_wrap(x, width =10)) +\n  theme(legend.position = \"none\",\n    legend.title = element_blank(),\n        axis.text.x = element_text(size = 6))\n\ntimeline_data <- cdc_datasets %>% \n  mutate(\n    level_of_access = case_when(\n      public_access_level %in% c(\"public\", \"public domain\") ~ \"Public Access\",\n      public_access_level == \"restricted public\" ~ \"Restricted Access\",\n      public_access_level == \"non-public\" ~ \"No Public Access\",\n      TRUE ~ \"Unspecified\"\n    ),\n    issued = as.Date(issued)\n  )  %>% \n  filter(!is.na(issued)) |>\n  arrange(issued) %>% \n  mutate(\n    Time_to_Archiv = as.numeric(issued - min(issued)),\n    Evt = 1,\n    archival_date = min(issued) + Time_to_Archiv\n  )\n\n\nmin <- min(timeline_data$issued)\n\nkm_fit <- survfit(Surv(Time_to_Archiv, Evt) ~ 1, data = timeline_data)\n\nkm_df <- data.frame(\n  time = km_fit$time,\n  survival = km_fit$surv,\n  cumulative_events = 1 - km_fit$surv,\n  archival_date = min(timeline_data$issued) + km_fit$time\n)\n\np2 <- ggplot(km_df, aes(x = archival_date, y = cumulative_events)) +\n  geom_step(color = \"#40B0A6\") +\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +  # Format x-axis as years\n  labs(x = \"Year\", y = \"Archival Events\", subtitle = str_wrap(\"Kaplan-Meier Curve of Archiving of CDC Databases\", 40), caption = \"Each step signifies an increase in database archiving \\n TidyTuesday: Week 6, 2025\") +\n  Custom_Style() +\n  theme(axis.text.y = element_blank())\n\np1\n```\n\n::: {.cell-output-display}\n![](TidyTues_Week06_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\np2\n```\n\n::: {.cell-output-display}\n![](TidyTues_Week06_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\np_combined <- p1 + p2 \n\n\np_combined +\n  Custom_Style() +\n  plot_annotation(title = \"CDC Database Archiving Analysis\",\n                  theme = Custom_Style()) +\n  theme(caption = element_text(hjust =  0.5))\n```\n\n::: {.cell-output-display}\n![](TidyTues_Week06_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}