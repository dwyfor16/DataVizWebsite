{
  "hash": "3f7b3f50072a26017f3d24ae28f1edf3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TidyTuesday Week 8: \"\nsubtitle: \"Academic Literature on Racial and Ethnic Disparities in Reproductive Medicine in the US\"\nauthor: \"Peter Gray\"\ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [tidytuesday, R, data visulisation, ggplot2, patchwork, tidyverse]\nimage: \"thumbnails/TidyTues_Week08a.png\"\nformat:\n  html:\n    code-link: true\n    code-fold: true\n    code-tools: false\n    code-summary: \"Display code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n![Figure 1](thumbnails/TidyTues_Week08a.png)\n\n::: {.cell}\n\n```{.r .cell-code}\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          used  (Mb) gc trigger  (Mb) max used  (Mb)\nNcells 2315793 123.7    4622430 246.9  2785232 148.8\nVcells 3992203  30.5    8388608  64.0  6875889  52.5\n```\n\n\n:::\n\n```{.r .cell-code}\nrm(list = ls())\ngraphics.off()\ncat('\\014')\n```\n\n\f\n\n```{.r .cell-code}\nif(!require(tidyverse)){install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(ggfortify)){install.packages(\"ggfortify\"); library(ggfortify)}\nif(!require(patchwork)){install.packages(\"patchwork\"); library(patchwork)}\nif(!require(sysfonts)){install.packages(\"sysfonts\"); library(sysfonts)}\nif(!require(showtext)){install.packages(\"showtext\"); library(showtext)}\nif(!require(RColorBrewer)){install.packages(\"RColorBrewer\"); library(RColorBrewer)}\nif(!require(maps)){install.packages(\"maps\"); library(maps)}\n\nif(!require(rlist)){install.packages(\"rlist\"); library(rlist)}\n\nwd <- getwd()\n\n\n\n\nfont_add_google(\"Roboto Mono\", \"roboto_mono\")\nfont <- \"roboto_mono\"\nshowtext_auto()\n\n# Color palette\ncolor <- palette.colors(palette = \"Okabe-Ito\")\ncolor <- append(color, \"gold\")\ncolor[1] <- \"#D41159\"\n\n\nCustom_Style <- function() {\n  ggplot2::theme(\n    plot.title = ggplot2::element_text(family=font,\n                                       size=24,\n                                       face=\"bold\",\n                                       color=\"#222222\"),\n    plot.subtitle = ggplot2::element_text(family=font,\n                                          size=18,\n                                          color=\"#222222\"),\n    plot.caption = ggplot2::element_text(family=font,\n                                         size=10,\n                                         color=\"#222222\"),\n    \n    legend.position = \"bottom\",\n    legend.title = ggplot2::element_text(family=font, \n                                         size=12, \n                                         face=\"bold\", \n                                         color=\"#222222\"),\n    # legend.text.align = 0,\n    legend.key = ggplot2::element_blank(),\n    legend.text = ggplot2::element_text(family=font,\n                                        size=9,\n                                        color=\"#222222\"),\n    \n    # Axis format\n    axis.text = ggplot2::element_text(family = font,\n                                      size=10,\n                                      color=\"#222222\"),\n    axis.text.x = ggplot2::element_text(margin=ggplot2::margin(5, b = 10), size =8),\n    axis.line = ggplot2::element_line(colour = alpha('#222222', 0.5), size =0.5),\n    axis.title = ggplot2::element_text(family=font, \n                                       size=12, \n                                       face=\"bold\", \n                                       color=\"#222222\"),\n    \n    \n    # Grid lines\n    panel.grid.minor = ggplot2::element_blank(),\n    panel.grid.major.y = ggplot2::element_blank(),\n    panel.grid.major.x = ggplot2::element_blank(),\n    \n    \n    \n    # Very pale cream/yellow background\n    panel.background = element_rect(fill = \"#FFFBF0\",  \n                                    color = \"#FFFBF0\", \n                                    linewidth = 0.5, \n                                    linetype = \"solid\"),\n    plot.background = element_rect(fill = \"#FFFBF0\",  \n                                   color = \"#FFFBF0\", \n                                   linewidth = 0.5, \n                                   linetype = \"solid\"),\n    legend.background = element_rect(fill = \"#FFFBF0\",  \n                                     color = \"#FFFBF0\", \n                                     linewidth = 0.5, \n                                     linetype = \"solid\"),\n    \n    \n  )\n}\n\n\narticle_dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-25/article_dat.csv')\nmodel_dat <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-25/model_dat.csv')\n\n# Data Cleaning \n\n#Fucntion to simplify races\n\nsimplify_race <- function(race) {\n  case_when(\n    grepl(\"African American|Black|NonBlack, Non-Hispanic Black\", race, ignore.case = TRUE) ~ \"Black\",\n    grepl(\"White|Caucasian|Non-Hispanic White\", race, ignore.case = TRUE) ~ \"White\",\n    grepl(\"Asian\", race, ignore.case = TRUE) ~ \"Asian\",\n    grepl(\"Hispanic|Latino\", race, ignore.case = TRUE) ~ \"Hispanic\",\n    grepl(\"Native American|Alaskan\", race, ignore.case = TRUE) ~ \"Native American\",\n    grepl(\"Pacific Islander|Hawaiian\", race, ignore.case = TRUE) ~ \"Pacific Islander\",\n    grepl(\"Unknown|Other|Multiple\", race, ignore.case = TRUE) ~ \"Other\",\n    TRUE ~ NA\n  )\n}\n\n\n# Publications mentioning Race --------------------------------------------\n\n\nrace_count <- article_dat %>% \n  mutate(across(starts_with(c(\"race\", \"eth\")), simplify_race)) %>% \n  rowwise() %>%\n  group_by(across(starts_with(c(\"race\", \"eth\")))) %>% \n  summarise() %>%\n  pivot_longer(cols = everything(), values_to = \"race\") %>% \n  filter(!is.na(race) & race != \"NA\") %>% \n  count(race, sort = TRUE)  \n\np1 <- race_count %>% \n  ggplot(aes(x = reorder(race, n), y = n, fill = race)) +  \n  geom_bar(stat = \"identity\") +  \n  geom_text(aes(label = paste0(\"n = \", n), fontface = \"bold\"), hjust = -0.1, size = 3, angle = 0) +  # Add text labels on top of bars\n  labs(subtitle = str_wrap(\"Race Count Distribution of Reproductive Rights studies in the US (2010-2023)\", 40),\n       x = \"Race\",\n       y = \"Count\",\n       fill = \"Race\") +\n  Custom_Style() +\n  coord_flip()  \n\n\n\n\n\nrace_year_count <- article_dat %>%\n  mutate(across(starts_with(c(\"race\", \"eth\")), simplify_race)) %>%\n  pivot_longer(cols = starts_with(c(\"race\", \"eth\")), values_to = \"race\", names_to = \"race_column\") %>%\n  filter(!is.na(race) & race != \"NA\" & race != \"\") %>%\n  group_by(year, race) %>%\n  summarise(n = n(), .groups = 'drop') %>% \n  group_by(year) %>% \n  mutate(percent = n / sum(n)) %>% \n  arrange(desc(percent)) %>% \n  ungroup()\n\np2 <- race_year_count %>% \n  ggplot(aes(x = year, y = percent, fill = race)) +  \n  geom_col() +\n  geom_text(aes(label = scales::percent(percent, accuracy = 1), fontface = \"bold\"),  \n            position = position_stack(vjust = 0.5),  \n            size = 3,  \n            family = font,\n            color = \"black\") +  \n  labs(subtitle = str_wrap(\"Proportion of Articles related to Reproductive rights mentioning each race (2010-2023)\", 40),\n       x = \"Race\",\n       y = \"Percent\", fill =\"Race\") +  \n  Custom_Style() +  \n  scale_y_continuous(labels = scales::percent_format())\n\n\n# Combined Plot\n\np1 + p2 +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\")  &\n  plot_annotation(title = str_wrap('Academic Literature on Racial and Ethnic Disparities in Reproductive Medicine in the US', 80),\n                  subtitle = \"TidyTuesday: Week 8, 2025\",\n                  theme = Custom_Style()) &\n  theme(caption = element_text(hjust =  0.5),\n        plot.subtitle = element_text(size = 16))\n\n\n# Forest Plots ------------------------------------------------------------\n\n# Clean the data\n\n# just want stratified studies\n\n\ndata <- model_dat %>%\n  filter(\n    subanalysis == \"No\",\n    measure == \"OR\",          # Ensures reference group includes 'White'\n    !grepl(\"none\", covariates, ignore.case = TRUE),     # Filters out rows where covariates is 'none'\n    outcome == \"severe maternal morbidity\",\n    model_number == 5\n  ) %>% \n  mutate(doi = factor(doi))\n\ndoi <- unique(factor(data$doi))\nd = 2\nlist_of_plots <- list()\n\n\ndata_i <- data %>% \n  filter(doi == doi[d]) %>% \n  filter(compare != \"Unknown\")\n\n\nmeasure <- unique(data_i$measure)\nendpoint <- unique(data_i$outcome)\ncitation <- unique(data_i$doi)\n\n\n\np3 <- ggplot(data_i, aes(x = point, y = reorder(compare, point))) +  \n  geom_point(size = 3, color = \"blue\") +  # Points for estimates\n  geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = \"black\") +  # Confidence intervals\n  geom_vline(xintercept = 1, linetype = \"dashed\", color = \"red\") +  # Reference line at 1\n  labs(title = \"Forest Plot: \",\n    subtitle = paste0(str_to_title(endpoint)),\n    x = paste0(measure, \" (95% CI)\"),\n    y = \"Comparison Group\",\n    caption = paste(\"Doi: \",citation, collapse = \"\\n\")\n  ) +\n  annotate(\"text\", x = 0.5, y = length(unique(data_i$compare)) + 0.5, label = \"Favourable compared with White Women\", color = \"green\", hjust = 0) +\n  annotate(\"text\", x = 1.5, y = length(unique(data_i$compare)) + 0.5, label = \"Outcomes Worsened compared with White Women\", color = \"red\", hjust = 1) +\n  Custom_Style()\n\n\np3\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}