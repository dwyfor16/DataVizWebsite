{
  "hash": "ce08e7dc043d71e44042acfd7317d224",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TidyTuesday Week 16: Fatal Car Crashes on DST days\"\nsubtitle: \"Today we're exploring the (lack of) connection between fatal car crashes in the United States on Daylight Savings Time\"\nauthor: \"Peter Gray\"\ndate: \"2025-04-21\" \ncategories: [\"TidyTuesday\", \"Data Visualization\", \"R Programming\", \"2025\"]\ntags: [tidytuesday, R, data visulation, ggplot2, patchwork, tidyverse]\nimage: \"thumbnails/TidyTues_Week16.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: false\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n::: {#fig-charts layout-ncol=\"2\"}\n![Chart](thumbnails/TidyTues_Week16.png){#fig-singlechart}\nChart of fatalities on Daylight Savings days versus the Average\n:::\n\n#### 1. R code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the packages in ----------------------------------------------------\n\nif(!require(tidyverse)){install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(patchwork)){install.packages(\"patchwork\"); library(patchwork)}\nif(!require(ggplot2)){install.packages(\"ggplot2\"); library(ggplot2)}\nif(!require(sugrrants)){install.packages(\"sugrrants\"); library(sugrrants)}\n# I stick all my styling into a CUsotm PAckage to tidy up my code and keep it consistent over the time\nif(!require(CustomGGPlot2Theme)){devtools::install(\"CustomGGPlot2Theme\"); library(CustomGGPlot2Theme)}\n\n# get the wd - force of habit\nwd <- getwd()\n#pulling images off internet was taking a lot of time and casing a time out error\noptions(timeout = 1000) \n\n\n\nfont <- \"roboto_bold\"\n\ndas <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-04-22/daily_accidents.csv')\n\ndas <- das %>%\n  mutate(\n    year = lubridate::year(date),\n    date_time = as.POSIXct(date, tz = \"UTC\"), \n    local_time = with_tz(date_time, tzone = \"America/New_York\"),\n    utc_offset = format(local_time, \"%z\")\n  )\n\ndas <- das %>%\n  arrange(date) %>%\n  mutate(\n    prev_offset = lag(utc_offset),\n    dst_switch = utc_offset != prev_offset\n  )\n\ndas <- das %>%\n  mutate(\n    dst_change = case_when(\n      is.na(prev_offset) ~ NA_character_,\n      utc_offset > prev_offset ~ \"Forward\",   # Spring: clocks jump ahead\n      utc_offset < prev_offset ~ \"Backward\",  # Fall: clocks go back\n      TRUE ~ NA_character_\n    )\n  )\n\ndst_vs_avg <- das %>%\n  filter(year >= 2010) %>%\n  group_by(year) %>%\n  mutate(avg_fatalities = mean(fatalities_count, na.rm = TRUE)) %>%\n  ungroup() %>%\n  filter(!is.na(dst_change)) %>%\n  group_by(year, dst_change, avg_fatalities) %>%\n  summarise(\n    dst_fatalities = mean(fatalities_count, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    pct_diff = 100 * (dst_fatalities - avg_fatalities) / avg_fatalities\n  )\n\np1 <- ggplot(dst_vs_avg, aes(x = factor(year), y = pct_diff, fill = dst_change)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray40\") +\n  scale_fill_manual(values = c(\"Forward\" = \"steelblue\", \"Backward\" = \"tomato\")) +\n   geom_text(\n    aes(\n      label = paste0(round(pct_diff, digits = 1), \"%\"),\n      #had to do this for dynamic position of the \n      vjust = case_when(pct_diff >= 0 ~ -0.5, TRUE ~ 1.5)\n    ),\n    position = position_dodge(width = 0.9),\n    size = 3.5\n  ) +\n  labs(\n    title = str_wrap(\"Percent Difference in Fatalities on Daylight Savings Change Days (Clocks Forward vs Backward)\", 60),\n    subtitle = \"Compared to annual average fatalities\",\n    x = \"Year\", y = \"% Difference\",\n    fill = \"Clock Change\"\n  ) +\n  Custom_Style() \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}