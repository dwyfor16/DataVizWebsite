{
  "hash": "a06255f51d30cc7669a53d9a96ae4dda",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Kaplan Meir Plots in Python\"\nsubtitle: \"An Experiment to see if I can produce Kaplan Meir plots using Python\"\nauthor: \"Peter Gray\"\ndate: \"2025-05-30\" \ncategories: [\"Biostatistics\", \"Python\", \"2025\", \"Data Analysis\"]\ntags: [Biostatistics, Python, \"2025\", Data Analysis]\nimage: \"/biostatistics/Thumbnails/KMPlot.png\"\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: false\n    code-summary: \"Show code\"\n    self-contained: true\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n#### 1. Python code\n\n::: {#d04041c8 .cell execution_count=1}\n``` {.python .cell-code}\n# pip install pandas\n# pip install numpy\n# pip install lifelines\n# pip install matplotlib\n\nfrom lifelines import KaplanMeierFitter\nimport pandas as pd \nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n\ngbsg2 = pd.read_csv(\"/home/pgr16/Documents/Data_Analysis/German Breast Cancer/GBSG2.csv\")\n\n\n# Create Age Group\n\nbins = [0, 40, 81]\nlabels = [\"0-40\", \"40 and older\"]\n\n\ngbsg2['Age Group'] = pd.cut(gbsg2['age'], bins = bins, labels= labels, right = False)\nkmf = KaplanMeierFitter()\n\nT = gbsg2[\"time\"]\nE = gbsg2[\"cens\"]\n\nkmf.fit(T, event_observed=E)\n\nplt.clf() # clear plot\nkmf.plot_survival_function()\nplt.title(\"Time to Recurrence of German Breast Cancer Patients\")\n\n\nprint(kmf.median_survival_time_)\n\nimport matplotlib.pyplot as plt\nfrom lifelines import KaplanMeierFitter\n\nage = (gbsg2[\"Age Group\"] == \"40 and older\")\nplt.clf()\nax = plt.subplot(111)\nkmf = KaplanMeierFitter()\nkmf.fit(T[age], event_observed=E[age], label=\"Over 40 years old\")\nkmf.plot_survival_function(ax=ax)\nkmf.fit(T[~age], event_observed=E[~age], label=\"40 years or younger\")\nkmf.plot_survival_function(ax=ax)\nplt.title(\"Kaplan-Meier Survival Curves by Age Group\")\nplt.xlabel(\"Time (days)\")\nplt.ylabel(\"Survival Probability\")\nplt.legend()\n\n\n\ngrade1 = gbsg2[\"tgrade\"] == \"I\"\ngrade2 = gbsg2[\"tgrade\"] == \"II\"\ngrade3 = gbsg2[\"tgrade\"] == \"III\"\n\nplt.clf()\n\nax = plt.subplot(111)\n\nkmf = KaplanMeierFitter()\n\n# Grade 1\nkmf.fit(T[grade1], event_observed=E[grade1], label=\" Tumor Grade 1\")\nkmf.plot_survival_function(ax=ax, at_risk_counts=True)\n\n\n# Grade 2\nkmf.fit(T[grade2], event_observed=E[grade2], label=\"Tumor Grade 2\")\nkmf.plot_survival_function(ax=ax, at_risk_counts=True)\n\n\n#Grade 3\nkmf.fit(T[grade3], event_observed=E[grade3], label=\"Tumor Grade 3\")\nkmf.plot_survival_function(ax=ax, at_risk_counts=True)\n\n\nplt.title(\"Time to Recurrence by Tumor Grade\")\nplt.xlabel(\"Time (days)\")\nplt.ylabel(\"Survival Probability\")\nplt.legend()\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1807.0\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Breast_Cancer_KM_plots_files/figure-html/cell-2-output-2.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "Breast_Cancer_KM_plots_files"
    ],
    "filters": [],
    "includes": {}
  }
}