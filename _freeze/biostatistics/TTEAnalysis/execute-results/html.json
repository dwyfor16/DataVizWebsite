{
  "hash": "4803a99f71c23ad20185c050b883c6ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Biostatistics: Time to Event Analysis \"\nsubtitle: \"An Analysis of the CDISC open source dataset predicting time to a dermatological event\"\nauthor: \"Peter Gray\"\ncategories: [\"Biostatistics\", \"Time to Event Analysis\", \"R Programming\", \"2025\"]\ntags: [R,  biostatistics, Time to Event Analysis ,tidyverse]\nimage: \"Images/KM/KM_1_TTE.png\"\nformat:\n  html:\n    code-link: true\n    code-fold: true\n    code-tools: false\n    code-summary: \"Display code\"\n    self-contained: true\n    theme: solar\neditor_options: \n  chunk_output_type: console\nexecute: \n  freeze: true                                                  \n  cache: true                                                   \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n![Figure 1](Images/KM/KM_1_TTE.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(sysfonts)){install.packages(\"sysfonts\"); library(sysfonts)}\nif(!require(showtext)){install.packages(\"showtext\"); library(showtext)}\nif(!require(haven)) {install.packages(\"haven\"); library(haven)}\nif(!require(tidyverse)) {install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(ggplot2)) {install.packages(\"ggplot2\"); library(ggplot2)}\nif(!require(survival)) {install.packages(\"survival\"); library(survival)} # for MNRM\nif(!require(survminer)) {install.packages(\"survminer\"); library(survminer)} # for model means difference\nif(!require(officer)) {install.packages(\"officer\"); library(officer)} # for reporting\nif(!require(flextable)) {install.packages(\"flextable\"); library(flextable)} # for reporting\nif(!require(Hmisc)) {install.packages(\"Hmisc\"); library(Hmisc)} \nif(!require(openxlsx)) {install.packages(\"openxlsx\"); library(openxlsx)} \nif(!require(epiR)) {install.packages(\"epiR\"); library(epiR)} \nif(!require(Barnard)) {install.packages(\"Barnard\"); library(Barnard)} \nif(!require(pharmaverseadam)) {install.packages(\"pharmaverseadam\"); library(pharmaverseadam)} \nif(!require(gtsummary)) {install.packages(\"gtsummary\"); library(gtsummary)} \n\nfont_add_google(\"Roboto Mono\", \"roboto_mono\")\nfont <- \"roboto_mono\"\nshowtext_auto()\n\n# Color palette\ncolor <- palette.colors(palette = \"Okabe-Ito\")\ncolor <- append(color, \"#40B0A6\")\ncolor[1] <- \"#D41159\"\n\n\nCustom_Style <- function() {\n  ggplot2::theme(\n    plot.title = ggplot2::element_text(family=font,\n                                       size=28,\n                                       face=\"bold\",\n                                       color=\"#222222\"),\n    plot.subtitle = ggplot2::element_text(family=font,\n                                          size=20,\n                                          color=\"#222222\"),\n    plot.caption = ggplot2::element_text(family=font,\n                                         size=12,\n                                         color=\"#222222\"),\n    \n    legend.position = \"bottom\",\n    legend.title = ggplot2::element_text(family=font, \n                                         size=12, \n                                         face=\"bold\", \n                                         color=\"#222222\"),\n    # legend.text.align = 0,\n    legend.key = ggplot2::element_blank(),\n    legend.text = ggplot2::element_text(family=font,\n                                        size=9,\n                                        color=\"#222222\"),\n    \n    # Axis format\n    axis.text = ggplot2::element_text(family = font,\n                                      size=10,\n                                      color=\"#222222\"),\n    axis.text.x = ggplot2::element_text(margin=ggplot2::margin(5, b = 10), size =8),\n    axis.line = ggplot2::element_line(colour = alpha('#222222', 0.5), size =0.5),\n    axis.title = ggplot2::element_text(family=font, \n                                       size=12, \n                                       face=\"bold\", \n                                       color=\"#222222\"),\n    \n    \n    # Grid lines\n    panel.grid.minor = ggplot2::element_blank(),\n    panel.grid.major.y = ggplot2::element_blank(),\n    panel.grid.major.x = ggplot2::element_blank(),\n    \n    \n    \n    # Very pale cream/yellow background\n    panel.background = element_rect(fill = \"#FFFBF0\",  \n                                    color = \"#FFFBF0\", \n                                    linewidth = 0.5, \n                                    linetype = \"solid\"),\n    plot.background = element_rect(fill = \"#FFFBF0\",  \n                                   color = \"#FFFBF0\", \n                                   linewidth = 0.5, \n                                   linetype = \"solid\"),\n    legend.background = element_rect(fill = \"#FFFBF0\",  \n                                     color = \"#FFFBF0\", \n                                     linewidth = 0.5, \n                                     linetype = \"solid\"),\n    \n    \n  )\n}\n\n\nadsl <- get(data(\"adsl\"))\n\nadtte <- get(data(\"adrs_onco\")) %>% \n  select(STUDYID, USUBJID, ANL01FL, RANDDT, ADT, EOSDT, ARM, PARAMCD, PARAM, AVAL, AGE, SEX, ETHNIC) \n# Defining Events event\n\n\nadtte <- adtte %>%\n  filter(ANL01FL == \"Y\", !is.na(RANDDT)) %>%\n  rename(EVT = AVAL) %>%\n  mutate(ADT = case_when(\n    is.na(ADT) ~ EOSDT,\n    TRUE ~ ADT\n  )) %>%\n  mutate(EVT = case_when(\n    EVT >= 1 ~ 1,\n    EVT == 0 ~ 0,\n    is.na(EVT) ~ 0\n  )) %>%\n  mutate(CNSR = case_when(\n    EVT == 0 ~ 1,\n    EVT > 0 | is.na(ADT) ~ 0\n  ), .after = EVT) %>%\n  mutate(\n    AVAL = case_when(\n      EVT == 1 ~ as.numeric(ADT - RANDDT),\n      CNSR == 1 ~ as.numeric(EOSDT - RANDDT)\n    ),\n    .after = CNSR\n  )  %>% \n  mutate(ARM = as.factor(ARM))\n\n\n\nPARAMS = unique(adtte$PARAM)\np = 2\n\n\n\nlist_of_tables <- list()\nfor (p in 1:length(PARAMS)) {\n  \n  adtte_param <- adtte %>% \n    filter(PARAM == PARAMS[p])\n  \n  max_days <- max(adtte_param$AVAL, na.rm = TRUE)\n  \n  time_points <- seq(12, max_days, by = 12)\n  \n  error1 <- try({time <- survfit(Surv(AVAL, EVT) ~ ARM, data = adtte_param)}, silent = TRUE)\n  error2 <- try(fup <- survfit(Surv(AVAL, CNSR) ~ ARM, data = adtte_param), silent = TRUE)\n  error3 <- try(hr <- coxph(Surv(AVAL, EVT) ~ ARM, data = adtte_param), silent = TRUE)\n  \n  # Generate and print the survival table\n  surv_table <- tbl_survfit(\n    time,\n    times = time_points,\n    label_header = \"**{time} Days**\"\n  ) %>% \n    modify_caption(PARAMS[p]) %>% \n    as_flex_table()\n  surv_table\n  \n  # Generate and print the Kaplan-Meier plot\n  tit <- PARAMS[p]\n  KMPlot <- ggsurvplot(\n    time, data = adtte_param, risk.table = FALSE, palette = 'lancet', \n    ggtheme = Custom_Style(),\n    title = str_wrap(tit, 70),\n    pval = TRUE,\n    legend.title = 'Treatment',\n    legend.labs = c(\"Placebo\", \"Xanomeline Low Dose\", \"Xanomeline High Dose\"),\n    risk.table.y.text = FALSE,\n    risk.table.title = 'Number at risk',\n    ylab = 'Probability of no event', \n    xlab = 'Time since therapy start (Days)',\n    break.time.by = 180\n  )\n  print(KMPlot)\n}\n```\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](TTEAnalysis_files/figure-html/load the packages and data-13.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}