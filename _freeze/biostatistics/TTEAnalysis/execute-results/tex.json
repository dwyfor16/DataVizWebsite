{
  "hash": "b5169a916a1136a612e60dcad42b2920",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TTEAnalysis\"\nformat: pdf\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          used (Mb) gc trigger (Mb) max used (Mb)\nNcells  598614 32.0    1364202 72.9   692245 37.0\nVcells 1103446  8.5    8388608 64.0  1923819 14.7\n```\n\n\n:::\n\n```{.r .cell-code}\nrm(list = ls())\ncat('\\014')\n```\n\n\f\n\n```{.r .cell-code}\ngraphics.off()\n\nif(!require(haven)) {install.packages(\"haven\"); library(haven)}\nif(!require(tidyverse)) {install.packages(\"tidyverse\"); library(tidyverse)}\nif(!require(ggplot2)) {install.packages(\"ggplot2\"); library(ggplot2)}\nif(!require(survival)) {install.packages(\"survival\"); library(survival)} # for MNRM\nif(!require(survminer)) {install.packages(\"survminer\"); library(survminer)} # for model means difference\nif(!require(officer)) {install.packages(\"officer\"); library(officer)} # for reporting\nif(!require(flextable)) {install.packages(\"flextable\"); library(flextable)} # for reporting\nif(!require(Hmisc)) {install.packages(\"Hmisc\"); library(Hmisc)} \nif(!require(openxlsx)) {install.packages(\"openxlsx\"); library(openxlsx)} \nif(!require(epiR)) {install.packages(\"epiR\"); library(epiR)} \nif(!require(Barnard)) {install.packages(\"Barnard\"); library(Barnard)} \n\n\nadtte <- read_xpt(\"~/Documents/Coding/Website/biostatistics/Data/adtte.xpt\") \nadsl <- read_xpt(\"~/Documents/Coding/Website/biostatistics/Data/adsl.xpt\") \n\ndoc.KM <- read_docx()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadtte <- adtte %>% \n  mutate(Evt = ifelse(CNSR == 0, 1, 0),\n         Treatment = TRTP,\n         Treat = recode(TRTAN, '54' = '1', '81' = '2', '0' = '0'))\n\nmaster = adsl %>%\n  filter(ITTFL == \"Y\") %>% \n  group_by(TRT01P) %>%  \n  summarise(Treat = first(TRT01PN), N.Pop = n()) %>% \n  rename(Treatment = TRT01P) %>% \n  mutate(Treat = recode(Treat, '54' = '1', '81' = '2', '0' = '0'))\n\npop <- adsl %>% \n  filter(ITTFL == \"Y\") %>% \n  select(USUBJID)\n\n#check adtte has \nadtte <- merge(pop, adtte, by =\"USUBJID\")\n\nres <- data.frame()\n\ndoc.KM = read_docx()\n\nparam <-  unique(adtte$PARAM)\np=1\n\ntte <- adtte \n\ndoc.KM = body_add_par(x = doc.KM, \n                      value = param[[p]], \n                      style = 'heading 2')\n\nNEvt = data.frame('Treatment' = NA, 'N.eligible' = NA, 'Evt' = NA, 'RR' = NA, 'LCL.RR' = NA, 'UCL.RR' = NA, \n                  'OR' = NA, 'LCL.OR' = NA, 'UCL.OR' = NA, \n                  'RD' = NA, 'LCL.RD' = NA, 'UCL.RD' = NA, 'p.fisher' = NA, 'p.barnard' = NA)\n\nnoEvt = 0\nAEFilter = 0\ntime = NULL\nfup  = NULL\nhr   = NULL\nlogrank = data.frame('Log-rank Test' = NA, 'Treatment' = NA)\nKM  = data.frame('median' = NA, '0.95LCL' = NA, '0.95UCL' = NA, 'Treatment' = NA, 'AD' = NA)\nFUP = data.frame('median' = NA, '0.95LCL' = NA, '0.95UCL' = NA, 'Treatment' = NA)\nHR  = data.frame('exp.(coef)' = NA, 'lower .95' = NA, 'upper .95' = NA, 'Treatment' = NA)\nscoretest = data.frame('Score Test' = NA, 'Treatment' = NA)\nfoo = NULL\n\nerror0 = try({NEvt = tte %>%   \n  group_by(Treatment) %>% \n  summarise(N.eligible = n_distinct(USUBJID), \n            Evt = sum(Evt))}, silent = T) \n\nTAB = NEvt %>% mutate(CNSR = N.eligible - Evt) %>% #Umstrukturieren für epi-tools - s. Help epi.2by2\n  arrange(desc(Treatment)) %>% # Leri muss oben stehen (Expose+)\n  dplyr::select(Treatment, Evt, CNSR, N.eligible) # Disease +, Disease -, Total\n\n\nif(any(TAB$Evt == 0)){\n  TAB$Evt = TAB$Evt + 0.5\n  TAB$CNSR = TAB$CNSR + 0.5\n  TAB$N.eligible = TAB$N.eligible + 1\n}\n\n\n\nvec = c(TAB$Evt[1], TAB$CNSR[1], TAB$Evt[2], TAB$CNSR[2])\nRR_OR_RD = epi.2by2(vec, method = 'cohort.count')$massoc.summary[1:3,]\n\n\nRR = RR_OR_RD[1, 2:4]\nRR$Treatment = 'Xanomeline Low Dose'\nnames(RR) = c('RR', 'LCL.RR', 'UCL.RR', 'Treatment')\nOR = RR_OR_RD[2, 2:4]\nOR$Treatment = 'Xanomeline Low Dose'\nnames(OR) = c('OR', 'LCL.OR', 'UCL.OR', 'Treatment')\nRD = RR_OR_RD[3, 2:4]\nRD$Treatment = 'Xanomeline Low Dose'\nnames(RD) = c('RD', 'LCL.RD', 'UCL.RD', 'Treatment')\n\np.fisher = data.frame('p.fisher' = fisher.test(TAB[,2:3])$p.value, 'Treatment' = 'Xanomeline Low Dose')\n\nNEvt = NEvt %>% \n  left_join(RR, by = 'Treatment') %>% \n  left_join(OR, by = 'Treatment') %>% \n  left_join(RD, by = 'Treatment') %>% \n  left_join(p.fisher, by = 'Treatment')\n\n\n#Survival Stats\nerror1 = try({time   <- survfit(Surv(AVAL, Evt)     ~ Treat, data = tte)}, silent = T)\nerror2 = try(fup    <- survfit(Surv(AVAL, CNSR) ~ Treat, data = tte), silent = T)\nerror3 = try(hr     <- coxph(Surv(AVAL, Evt)       ~ Treat, data = tte), silent = T)\n\nif(sum(NEvt$Evt) == 0 | is.na(sum(NEvt$Evt))){\n  noEvt = 1\n}\n\n# Kaplan Meier Plots\n\nKM = as.data.frame(summary(time)$table)\n\n# stimmt die erwartete Spaltenzahl, wird weiter aufbereitet\n\nKM = subset(KM, select = -c(1, 2, 3, 4, 5, 6))\nKM$Treatment[row.names(KM) == 'Treat=0'] = \"Placebo\"\nKM$Treatment[row.names(KM) == 'Treat=1'] = \"Xanomeline Low Dose\"\nKM$Treatment[row.names(KM) == 'Treat=2'] = \"Xanomeline High Dose\"\nKM <- KM %>%\n  mutate(Treatment = case_when(\n    row.names(KM) == \"Treat=0\" ~ \"Placebo\",\n    row.names(KM) == \"Treat=1\" ~ \"Xanomeline Low Dose\",\n    row.names(KM) == \"Treat=2\" ~ \"Xanomeline High Dose\",\n    TRUE ~ Treatment  # Keeps existing values for other rows\n  ))\nif (noEvt == 0){\n  logrank <- as.data.frame(surv_pvalue(time)$pval)\n  names(logrank) = 'Log-rank Test'\n  logrank$Treatment = 'Xanomeline Low Dose'\n}\n\nfilename = paste0('~/Documents/Coding/Website/biostatistics/Images/KM/KM_', p, '_TTE','.png')\ntit = str_to_title(tte$PARAM[1])\nsubtit = '(MITT Set)'\n# device öffnen\npng(filename, height = 480, width = 640)\n\n\nfoo = ggsurvplot(time, data = tte, risk.table = T, palette = 'lancet', ggtheme = theme_pubclean(),\n                 title = str_wrap(tit, 70),\n                 pval = T,\n                 subtitle = paste0(subtit),\n                 legend.title = 'Treatment',\n                 legend.labs = c(\"Placebo\", \"Xanomeline Low Dose\", \"Xanomeline High Dose\"),\n                 risk.table.y.text = F,\n                 risk.table.title = 'Number at risk',\n                 ylab = 'Probability of no event', xlab = 'Time since therapy start (Days)',\n                 break.time.by = 180)\nprint(foo)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npdf \n  2 \n```\n\n\n:::\n\n```{.r .cell-code}\ndoc.KM = doc.KM %>%\n  body_add_par(value = '') %>%\n  body_add_img(src = filename, height = 3.5, width = 4.66666667)\nfig_num.KM = run_autonum(seq_id = 'Figure', pre_label = 'Figure ', post_label = ': ')\ndoc.KM <- body_add_caption(x = doc.KM,\n                           value = block_caption(paste0(tit, ' - ', subtit), autonum = fig_num.KM))\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}